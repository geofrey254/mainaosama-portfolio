/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    projects: Project;
    vision: Vision;
    gallery: Gallery;
    newsletter: Newsletter;
    contactaddresses: Contactaddress;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    vision: VisionSelect<false> | VisionSelect<true>;
    gallery: GallerySelect<false> | GallerySelect<true>;
    newsletter: NewsletterSelect<false> | NewsletterSelect<true>;
    contactaddresses: ContactaddressesSelect<false> | ContactaddressesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  layout?:
    | (
        | {
            heading: string;
            subheading: string;
            hero_image: number | Media;
            description: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            heading: string;
            description: string;
            info: {
              label?: string | null;
              value?: string | null;
              id?: string | null;
            }[];
            photo: number | Media;
            quote: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'bio';
          }
        | {
            heading: string;
            'sub-heading': string;
            info: {
              value?: string | null;
              label?: string | null;
              id?: string | null;
            }[];
            projects: (number | Project)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'impact';
          }
        | {
            heading: string;
            'sub-heading': string;
            quote: string;
            visions: (number | Vision)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'vision';
          }
        | {
            photos: (number | Gallery)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'gallery';
          }
        | {
            clause: string;
            photo: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'about';
          }
        | {
            mission: string;
            vision: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'goals';
          }
        | {
            our_values?:
              | {
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'core-values';
          }
        | {
            title: string;
            description: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contact';
          }
        | {
            socials?:
              | {
                  linkedin?: string | null;
                  facebook?: string | null;
                  twitter?: string | null;
                  tiktok?: string | null;
                  instagram?: string | null;
                  id?: string | null;
                }[]
              | null;
            phoneNumbers?:
              | {
                  phone: string;
                  id?: string | null;
                }[]
              | null;
            emailAdd?:
              | {
                  email: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactAddresses';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Add Project
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title: string;
  slug: string;
  description: string;
  impact: string;
  date: string;
  location: string;
  metrics: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * Add Vision Item
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vision".
 */
export interface Vision {
  id: number;
  title: string;
  slug: string;
  description: string;
  keyPoints: {
    point: string;
    id?: string | null;
  }[];
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Add Image
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery".
 */
export interface Gallery {
  id: number;
  caption: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter".
 */
export interface Newsletter {
  id: number;
  email: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage contact address entries
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactaddresses".
 */
export interface Contactaddress {
  id: number;
  label: string;
  address: string;
  phone?: string | null;
  email?: string | null;
  mapLink?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'vision';
        value: number | Vision;
      } | null)
    | ({
        relationTo: 'gallery';
        value: number | Gallery;
      } | null)
    | ({
        relationTo: 'newsletter';
        value: number | Newsletter;
      } | null)
    | ({
        relationTo: 'contactaddresses';
        value: number | Contactaddress;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              hero_image?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        bio?:
          | T
          | {
              heading?: T;
              description?: T;
              info?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              photo?: T;
              quote?: T;
              id?: T;
              blockName?: T;
            };
        impact?:
          | T
          | {
              heading?: T;
              'sub-heading'?: T;
              info?:
                | T
                | {
                    value?: T;
                    label?: T;
                    id?: T;
                  };
              projects?: T;
              id?: T;
              blockName?: T;
            };
        vision?:
          | T
          | {
              heading?: T;
              'sub-heading'?: T;
              quote?: T;
              visions?: T;
              id?: T;
              blockName?: T;
            };
        gallery?:
          | T
          | {
              photos?: T;
              id?: T;
              blockName?: T;
            };
        about?:
          | T
          | {
              clause?: T;
              photo?: T;
              id?: T;
              blockName?: T;
            };
        goals?:
          | T
          | {
              mission?: T;
              vision?: T;
              id?: T;
              blockName?: T;
            };
        'core-values'?:
          | T
          | {
              our_values?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contact?:
          | T
          | {
              title?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        contactAddresses?:
          | T
          | {
              socials?:
                | T
                | {
                    linkedin?: T;
                    facebook?: T;
                    twitter?: T;
                    tiktok?: T;
                    instagram?: T;
                    id?: T;
                  };
              phoneNumbers?:
                | T
                | {
                    phone?: T;
                    id?: T;
                  };
              emailAdd?:
                | T
                | {
                    email?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  impact?: T;
  date?: T;
  location?: T;
  metrics?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vision_select".
 */
export interface VisionSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  keyPoints?:
    | T
    | {
        point?: T;
        id?: T;
      };
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery_select".
 */
export interface GallerySelect<T extends boolean = true> {
  caption?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter_select".
 */
export interface NewsletterSelect<T extends boolean = true> {
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactaddresses_select".
 */
export interface ContactaddressesSelect<T extends boolean = true> {
  label?: T;
  address?: T;
  phone?: T;
  email?: T;
  mapLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}